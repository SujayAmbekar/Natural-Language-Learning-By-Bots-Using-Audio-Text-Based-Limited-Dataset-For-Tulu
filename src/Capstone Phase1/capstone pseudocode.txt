procedure addword:
	//Graph family 1 used here
	enter english word;
	if node does not exist then:
		create node for eword;
	enter tulu word;
	if node does not exist then:
		create node for tword (kannada script);
	create association between two above nodes;
	if node exists:
		create association between existing word and new word;
	add word type as property to both nodes;
	end

procedure addFromDataset:
	preprocess(dataset);
	for word in dataset:
		addword(word);
	end

procedure addSentenceFromUser:
	//Graph family 2 used here
	create dictionary D1;
	enter tulu sentence;
	enter english sentence;
	if unknown words in either then:
		addword(unknown word);
	create node for each sentence and add association;
	if word type sequence not in D1:
		add word type sequence association to dictionary;
		set weight to 1;
	else:
		increase weight for word type sequence association; //This is a user addition; maximum weight increase
	end

procedure addSentenceFromCommunity:
	//Graph family 2 used here
	import dictionary from user2; //user2 is part of community
	Add unknown words;	
	Increase weights for repeated word orders with weight 0.4*currentWeight;
	Add unknown word orders with weight 0.4*currentWeight; 
	end

procedure modelSentence:
	choose from D1 WHERE weight minimum;
		if multiple minimum weights then choose random(seed=time);
	find sentence associated w that word order;
	replace one word in sentence such that new sentence not in incorrect sentences list;
	if sentence is correct:
		add to sentences graph;
		increase weights for word order with weight 0.25*currentWeight;
	if sentence is incorrect:
		add to incorrect sentences list;
	end

	